[{"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/index.js":"1","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/App.js":"2","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/routes.js":"3","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/Login/index.js":"4","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/Register/index.js":"5","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/config/firebase.js":"6","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/Home/index.js":"7","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/store.js":"8","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/reducers/index.js":"9","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/Footer/index.js":"10","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/Header/index.js":"11","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/constants/messages.js":"12","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/reducers/UserReducer.js":"13","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/RecoverPassword/index.js":"14","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/UserInfo/index.js":"15","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ContactGroupList/index.js":"16","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ContactInfo/index.js":"17","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/BannerComponent/index.js":"18","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ChatComponent/index.js":"19","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/PerfilInfo/index.js":"20","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/AddContact/index.js":"21","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/utils/hash.js":"22","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ContactList/index.js":"23","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/config/firebaseroutes.js":"24"},{"size":471,"mtime":1612635809607,"results":"25","hashOfConfig":"26"},{"size":142,"mtime":1612635809583,"results":"27","hashOfConfig":"26"},{"size":937,"mtime":1612635809619,"results":"28","hashOfConfig":"26"},{"size":4718,"mtime":1614445357739,"results":"29","hashOfConfig":"26"},{"size":4515,"mtime":1614445340092,"results":"30","hashOfConfig":"26"},{"size":504,"mtime":1614292972058,"results":"31","hashOfConfig":"26"},{"size":995,"mtime":1614118837666,"results":"32","hashOfConfig":"26"},{"size":517,"mtime":1612635809619,"results":"33","hashOfConfig":"26"},{"size":141,"mtime":1612635809619,"results":"34","hashOfConfig":"26"},{"size":471,"mtime":1612635809595,"results":"35","hashOfConfig":"26"},{"size":364,"mtime":1612635809595,"results":"36","hashOfConfig":"26"},{"size":521,"mtime":1612635809607,"results":"37","hashOfConfig":"26"},{"size":1043,"mtime":1614445195156,"results":"38","hashOfConfig":"26"},{"size":2849,"mtime":1612637302094,"results":"39","hashOfConfig":"26"},{"size":2956,"mtime":1614442219666,"results":"40","hashOfConfig":"26"},{"size":2899,"mtime":1614443159169,"results":"41","hashOfConfig":"26"},{"size":842,"mtime":1614035683820,"results":"42","hashOfConfig":"26"},{"size":419,"mtime":1614031255989,"results":"43","hashOfConfig":"26"},{"size":5136,"mtime":1614453733363,"results":"44","hashOfConfig":"26"},{"size":6533,"mtime":1614445317765,"results":"45","hashOfConfig":"26"},{"size":3288,"mtime":1614444511701,"results":"46","hashOfConfig":"26"},{"size":442,"mtime":1613315315561,"results":"47","hashOfConfig":"26"},{"size":3663,"mtime":1614445280555,"results":"48","hashOfConfig":"26"},{"size":184,"mtime":1614296388155,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18m2soi",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/index.js",[],["102","103"],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/App.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/routes.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/Login/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/Register/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/config/firebase.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/Home/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/store.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/reducers/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/Footer/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/Header/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/constants/messages.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/reducers/UserReducer.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/pages/RecoverPassword/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/UserInfo/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ContactGroupList/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ContactInfo/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/BannerComponent/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ChatComponent/index.js",["104","105","106","107","108"],"import React, { useEffect, useState, useRef } from 'react';\nimport './styles.css';\nimport { MdAccountCircle, MdAttachFile, MdSend, MdMic }  from 'react-icons/md';\nimport firebase from \"../../config/firebase\";\nimport BlockUi from \"react-block-ui\";\nimport \"react-block-ui/style.css\";\nimport { useSelector } from 'react-redux';\nimport { messages } from '../../config/firebaseroutes';\n\nexport default function ChatComponent(props) {\n\n    const database = firebase.database();\n    const user = useSelector(state => state.user);\n    const [blocking, setBlocking] = useState(false);\n    const [contact, setContact] = useState(undefined);\n    const [isNewChat, setIsNewChat] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [userHash, setUserHash] = useState(\"\");\n    const [contactHash, setContactHash] = useState(\"\");\n    const messagesRef = useRef();\n    const [chats, setChats] = useState(undefined);\n    \n    useEffect(() => {\n        messages.doc(user.userEmail).collection(\"contacts\")\n                .doc(props.contact.email).collection(\"messages\")\n                .orderBy(\"datetime\", \"asc\").get().then(async messageData => {\n                    await setChats(messageData.docs.map(doc => doc.data()));\n                });\n    }, [props, user, contact, isNewChat]);\n\n    function adjustText() {\n        if (messagesRef.current) {\n            messagesRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\",\n            });\n        }\n    }\n\n    function loadData() {\n        setBlocking(true);\n        database.ref(`users/${userHash}/chats/${contactHash}`).on('value', snapshot => {\n            let messageList = snapshot.toJSON();\n            if (messageList) {\n                messageList = Object.values(messageList)\n                messageList.sort((m1, m2) => {\n                    if (m1.datetime > m2.datetime) {\n                        return 1;\n                    }\n                    return -1;\n                })\n                // setMessages(messageList);\n                adjustText();\n            }\n            setBlocking(false);\n        });\n    }\n\n    async function sendMessage() {\n        const date = new Date();\n        setBlocking(true);\n        const m = {   \n            sender: user.userEmail,\n            message: message,\n            datetime: date.getTime()\n        }\n        await messages.doc(user.userEmail).collection(\"contacts\")\n                .doc(props.contact.email).collection(\"messages\").add(m);\n        await messages.doc(props.contact.email).collection(\"contacts\")\n                .doc(user.userEmail).collection(\"messages\").add(m);\n        setBlocking(false);\n    }\n\n    return (\n        <BlockUi tag=\"div\" blocking={blocking}>\n            <div className=\"chat\">\n                <div className=\"chat-header\">\n                    {props.contact.image ?\n                        <img src={props.contact.image} alt=\"imagem do usuário\" /> :\n                        <MdAccountCircle color=\"white\" className=\"user-icon\" />\n                    }\n                    <span>{props.contact.nickname ? props.contact.nickname \n                    : props.contact.username}</span>\n                </div>\n                <div className=\"chat-content\">\n                    <ul>\n                        {chats.map(m => (\n                            <li key={m.datetime} ref={messagesRef}\n                                className={m.sender === user.userEmail ? 'chat-content-sender' : 'chat-content-receiver'}>\n                                <span className={m.sender ? 'chat-content-sender-text' :\n                                     'chat-content-receiver-text'}>{m.message}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"chat-input\">\n                    <div className=\"chat-input-attach\">\n                        <label htmlFor=\"file-input\">\n                            <MdAttachFile color=\"white\" className=\"chat-input-icons\"/>\n                        </label>\n                        <input id=\"file-input\" type=\"file\"/>\n                    </div>\n                    <div className=\"chat-input-wrapper\">\n                        <input className=\"chat-input-input\" id=\"input\" placeholder=\"Digite uma mensagem\" \n                            onChange={e => setMessage(e.target.value)} \n                            onKeyPress={e => e.key === 'Enter' ? sendMessage() : null}/>\n                    </div>\n                    <div className=\"chat-input-interactions\">\n                        <button type=\"button\" className=\"chat-input-buttons\">\n                            <MdMic color=\"white\" className=\"chat-input-icons\"/>\n                        </button>\n                        <button type=\"button\" className=\"chat-input-buttons\" \n                            onClick={() => sendMessage()}\n                            >\n                            <MdSend color=\"white\" className=\"chat-input-icons\"/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </BlockUi>\n    );\n}","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/PerfilInfo/index.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/AddContact/index.js",["109"],"import React, { useState } from 'react';\nimport './styles.css';\nimport firebase from \"../../config/firebase\";\nimport BlockUi from \"react-block-ui\";\nimport \"react-block-ui/style.css\";\nimport { useSelector } from 'react-redux';\nimport \"react-notifications/lib/notifications.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport { users } from '../../config/firebaseroutes';\n\nexport default function AddContact() {\n\n    const [contactEmail, setContactEmail] = useState('');\n    const [blocking, setBlocking] = useState(false);\n    const userEmail = useSelector(state => state.user.userEmail);\n\n    async function addContact() {\n        setBlocking(true);\n        users.doc(contactEmail).get().then((doc) => {\n            if (doc.exists) {\n                users.doc(userEmail).collection(\"contacts\").add({\n                    email: contactEmail\n                }).then(() => {\n                    NotificationManager.success(\"Contato adicionado com sucesso\");\n                }).catch(() => {\n                    NotificationManager.success(\"Erro ao adicionar contato\");\n                }).finally(() => {\n                    setBlocking(false);\n                });\n            } else {\n                NotificationManager.success(\"Erro ao adicionar contato\");\n                setBlocking(false);\n            }\n        }); \n    }\n\n    return (\n        <BlockUi tag=\"div\" blocking={blocking}>\n            <div className=\"modal\" id=\"addContact\" tabIndex=\"-1\" role=\"dialog\"\n                aria-labelledby=\"addContactTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"h3 mb-3 font-weight-bold text-blue\"> Contatos </h3>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-md-12\">\n                                    <label htmlFor=\"email\">E-mail</label>\n                                    <input type=\"text\" className=\"form-control text-blue\" id=\"email\"\n                                        placeholder=\"Digite o e-mail do contato\"\n                                        onChange={(event) => setContactEmail(event.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer mt-3 \">\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Fechar</button>\n                                <button type=\"button\" className=\"btn btn-primary\"\n                                    onClick={() => addContact()}>Adicionar Contato</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <NotificationContainer />\n        </BlockUi>\n    );\n}","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/utils/hash.js",[],"/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/components/ContactList/index.js",["110"],"import React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport firebase from \"../../config/firebase\";\nimport BlockUi from \"react-block-ui\";\nimport \"react-block-ui/style.css\";\nimport { useSelector } from 'react-redux';\nimport { users } from '../../config/firebaseroutes';\n\nexport default function ContactList({newChatCallback}) {\n    const database = firebase.database();\n    const [blocking, setBlocking] = useState(false);\n    const [contacts, setContacts] = useState([]);\n    const userEmail = useSelector(state => state.user.userEmail);\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    useEffect(() => {\n        if (!dataLoaded) {\n            setBlocking(true);\n            users.doc(userEmail).collection('contacts').get().then((docs) => {\n                let contactList = [];\n                docs.forEach(d => {\n                    users.doc(d.data().email).get().then((contact) => {\n                        contactList.push(contact.data());\n                    })\n                });\n                setContacts(contactList);\n            })\n        }\n    }, [blocking, database, userEmail, dataLoaded]);\n\n    return (\n        <BlockUi tag=\"div\" blocking={blocking}>\n            <div className=\"modal\" id=\"contactList\" tabIndex=\"-1\" role=\"dialog\"\n                aria-labelledby=\"contactListTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"h3 mb-3 font-weight-bold text-blue\"> Contatos </h3>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"contacts\">\n                            <ul>\n                                {contacts.map(contact => (\n                                    <li key={contact.email}>\n                                        <div className=\"contact-info\" onClick={() => newChatCallback(contact)}>\n                                            <div className=\"card-body contact-info-content\">\n                                                <div className=\"contact-text\">\n                                                    <h2 className=\"card-title\">\n                                                        {contact.username}\n                                                    </h2>\n                                                    <span className=\"card-text\">\n                                                        {\n                                                            contact.status ? contact.status : \n                                                            \"Olá, comecei a usar o Ellochat\"\n                                                        }\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </li>\n\n                                ))}\n                            </ul>  \n                            <div className=\"modal-footer mt-3 \">\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Fechar</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </BlockUi>\n    );\n}\n","/home/weth/Área de Trabalho/Linux/IFMG/8º Semestre/Desenvolvimento Web Avançado/ellochat/ellochat-frontend/src/config/firebaseroutes.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":15,"column":21,"nodeType":"117","messageId":"118","endLine":15,"endColumn":31},{"ruleId":"115","severity":1,"message":"119","line":16,"column":23,"nodeType":"117","messageId":"118","endLine":16,"endColumn":35},{"ruleId":"115","severity":1,"message":"120","line":18,"column":22,"nodeType":"117","messageId":"118","endLine":18,"endColumn":33},{"ruleId":"115","severity":1,"message":"121","line":19,"column":25,"nodeType":"117","messageId":"118","endLine":19,"endColumn":39},{"ruleId":"115","severity":1,"message":"122","line":40,"column":14,"nodeType":"117","messageId":"118","endLine":40,"endColumn":22},{"ruleId":"115","severity":1,"message":"123","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":16},{"ruleId":"115","severity":1,"message":"124","line":14,"column":24,"nodeType":"117","messageId":"118","endLine":14,"endColumn":37},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'setContact' is assigned a value but never used.","Identifier","unusedVar","'setIsNewChat' is assigned a value but never used.","'setUserHash' is assigned a value but never used.","'setContactHash' is assigned a value but never used.","'loadData' is defined but never used.","'firebase' is defined but never used.","'setDataLoaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]